name: Weekly Build and Test

# PREREQUISITES FOR PUSH-BACK OF TEST RESULTS
# Please note: test project usually required nuget package JUnitTestLogger
# to be able to provide JUnit compatible test results XML file (required
# for pushing back details on succeeded/failed tests)
#
# NuGet install command:
# - Install-Package JUnitTestLogger

# Controls when the action will run.
on:
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

    # Run every week on sunday to test Scopevisio API and CenterDevice API
    schedule:
    - cron: "0 23 * * 6"

env:
    # Path to the solution file relative to the root of the project
    SOLUTION_FILE_PATH: .

    # Configuration type to build
    BUILD_CONFIGURATION: CI_CD

    BUILD_OUTPUT: CenterDevice.Rest/bin/CI_CD
    BUILD_OUTPUT_TEST: CenterDevice.Rest.Test/bin/CI_CD

jobs:
    test:
        #needs: build
        
        # Prevent concurrent job runners changing the very same data on the remote DMS test server
        concurrency: teamwork_test_server
        
        runs-on: ${{ matrix.os }}

        strategy:
            # test mights fail in run simultaneously because of preparation and cleanup of test file on the very same DMS space
            max-parallel: 1
            fail-fast: true
            matrix:
                os: ubuntu-latest

        env:
            RESULTS_PATH: TestResults.xml
            TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
            TEST_CUSTOMERNO: ${{ secrets.TEST_CUSTOMERNO }}
            TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: 5.0.x

            - name: Dir Listing (Linux)
              run: ls -la

            - name: Install dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --configuration=${{env.BUILD_CONFIGURATION}} --no-restore

            - name: Run Unit Tests - .NET 5.0
              run: dotnet test --framework net5.0 --results-directory test-results-net5.0 --logger junit --configuration=${{env.BUILD_CONFIGURATION}} --no-restore

            - name: Unit Test Results (Linux) - NET 5.0
              uses: EnricoMi/publish-unit-test-result-action@v1
              if: always() && startsWith(matrix.os, 'ubuntu')
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  files: "test-results-net5.0/TestResults.xml"
                  check_run_annotations: all tests
                  comment_title: Unit Test Statistics (${{matrix.os}})  - NET 5.0
                  check_name: Unit Test Results (${{matrix.os}})  - NET 5.0
                  report_individual_runs: true
